# Generated by Django 2.1.4 on 2019-01-18 12:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_number', models.IntegerField(help_text='Chapter number according to syllabus')),
                ('chapter_name', models.CharField(help_text='Chapter name (according to syllabus)', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.FileField(help_text='Choose an avatar', upload_to='avatars/')),
                ('phone', models.CharField(help_text='Enter your phone number using the format +880**********', max_length=14)),
                ('school', models.CharField(help_text='Enter the name your school', max_length=50)),
                ('level', models.IntegerField(choices=[(1, 'O Levels'), (2, 'IGCSE'), (3, 'A Levels')], default=0, help_text='Which level are you currently in?')),
                ('date_of_birth', models.DateField(help_text='Enter your date of birth')),
                ('registered_on', models.DateField(auto_now_add=True)),
                ('credit', models.IntegerField(default=100)),
                ('social_media_link', models.CharField(max_length=100)),
                ('uncredited_flags', models.IntegerField(default=0)),
                ('credited_flags', models.IntegerField(default=0)),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('flag_ID', models.IntegerField(db_index=True, primary_key=True, serialize=False)),
                ('details', models.CharField(help_text='Details about the mistake', max_length=100)),
                ('resolved', models.BooleanField(default=False)),
                ('user_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flagger', to='question_model.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(choices=[('s', 'summer'), ('m', 'mid session'), ('w', 'winter')], default='s', max_length=2)),
                ('year', models.IntegerField(help_text='Last two digits of the year of the exam')),
                ('paper', models.IntegerField(help_text='Paper number')),
                ('variant', models.IntegerField(verbose_name='Variant number of the paper')),
                ('number_of_questions', models.IntegerField(default=40, help_text='Total number of questions')),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.IntegerField(help_text='Question Number')),
                ('correct_answer', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=2)),
                ('solution', models.CharField(help_text='Can use Latex code in solution', max_length=100)),
                ('file_link', models.FileField(blank=True, help_text='link to animation/video (optional)', upload_to='solutions/')),
                ('difficulty', models.FloatField(help_text='for heuristics')),
                ('flagged_by_user', models.BooleanField(default=False)),
                ('chapter_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chapters', to='question_model.Chapter')),
                ('paper_reference', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='solutions', to='question_model.Paper')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('syllabus_code', models.IntegerField(help_text='4 digit unique Syllabus Code', primary_key=True, serialize=False)),
                ('syllabus_title', models.CharField(help_text='Name of the Subject', max_length=100)),
                ('board', models.IntegerField(choices=[(1, 'Cambridge'), (2, 'Edexcel')], default=1)),
                ('level', models.IntegerField(choices=[(1, 'O Levels'), (2, 'IGCSE'), (3, 'A Levels')], default=1)),
            ],
        ),
        migrations.AddField(
            model_name='paper',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='papers', to='question_model.Subject'),
        ),
        migrations.AddField(
            model_name='license',
            name='paper',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='papers', to='question_model.Paper'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='chapters', to='question_model.Subject'),
        ),
        migrations.AlterUniqueTogether(
            name='solution',
            unique_together={('paper_reference', 'question_number')},
        ),
        migrations.AlterUniqueTogether(
            name='paper',
            unique_together={('subject', 'season', 'year', 'paper', 'variant')},
        ),
        migrations.AlterUniqueTogether(
            name='license',
            unique_together={('account', 'paper')},
        ),
        migrations.AlterUniqueTogether(
            name='chapter',
            unique_together={('subject', 'chapter_number')},
        ),
    ]
